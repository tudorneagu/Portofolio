name: CD â€“ Portfolio Cosmin

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Clean workspace
        run: |
          git reset --hard
          git clean -fdx

      - name: Prune Docker builder cache
        run: docker builder prune --all --force

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" \
            | docker login -u "tudorneagu90" --password-stdin

      - name: Build & push image
        run: |
          docker build -t tudorneagu90/portofolio-cosmin:latest .
          docker push tudorneagu90/portofolio-cosmin:latest

      - name: Deploy to VPS
        env:
          HOST: ${{ secrets.HOST }}
          USER: ${{ secrets.USER }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          APP_DIR: "/app/portofolio-cosmin"
        run: |
          # Write & secure SSH key
          echo "$PRIVATE_KEY" > /tmp/deploy_key
          chmod 600 /tmp/deploy_key

          # Ensure target folder exists & remove old compose
          ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no \
            $USER@$HOST \
            "mkdir -p $APP_DIR && rm -f $APP_DIR/docker-compose.yml"

          # Copy over the new docker-compose.yml
          scp -i /tmp/deploy_key -o StrictHostKeyChecking=no \
            ./docker-compose.yml \
            $USER@$HOST:$APP_DIR/docker-compose.yml

          # Pull & restart with plugin syntax, confirming location
          ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no \
            $USER@$HOST \
            "cd $APP_DIR \
             && echo 'Contents of $APP_DIR:' \
             && ls -lah \
             && docker compose pull \
             && docker compose up -d --remove-orphans"
